# QQ-plot

import pandas as pd
import project_infrastructure as PIN
import scipy.stats as sps
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import norm
sns.set()

Rand_Sample = pd.read_csv('fit_ticker_data.csv')
ticker_array = np.array(Rand_Sample.ticker)

# for Equities
def qq_coeff(SMA):
    confidence_level = 0.95
    margin_of_error = 0.05
    population_size = 6922
    ticker_array = np.array(Rand_Sample.ticker)[:-5]
    full_equity_close_array = []
    for i in range(len(ticker_array)):
        file_data = pd.read_csv(r'C:/Users/Tan Zong Hong/Python_codes/DAO2704 Project/Equity_csv/' + ticker_array[i] + ".csv")
        Close = file_data.Close
        full_equity_close_array.append(np.array(Close))
    equity_close_array = full_equity_close_array
    Equity_Array_accuracy = []
    for j in range(len(SMA)):
        for i in range(len(equity_close_array)):
            Equity_Array_accuracy.append(PIN.correct_count(equity_close_array[i],SMA[j]))
    qq_test_array = []
    for i in range(len(SMA)):
        qq_test_array.append(Equity_Array_accuracy[364*i:364*(1+i)])
    qq_test_result = []
    for i in range(len(qq_test_array)):
        qq_test_result.append(PIN.q_q_plot_coeff(qq_test_array[i]))
    return qq_test_result
    
# prints QQ-coefficient for all SMA 
SMA = [10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,110,120,130,140,150,160,170,180,190,200]
x = qq_coeff(SMA)

# for Commodities
def comdty_qq_coeff(SMA):
    df_comdty = pd.read_csv("Comdty_bank.csv")
    df_comdty_population = pd.read_csv("Comdty_population_tickers.csv")
    comdty_pop = np.array(df_comdty_population.Ticker)
    price_array = []
    for i in range(len(comdty_pop)):
        price_array.append(PIN.remove_NaN(np.array(df_comdty[comdty_pop[i]])[::-1]))
    Comdty_Array_accuracy = []
    for j in range(len(SMA)):
        for i in range(len(price_array)):
            Comdty_Array_accuracy.append(PIN.correct_count(price_array[i],SMA[j]))
    qq_test_array = []
    for i in range(len(SMA)):
        qq_test_array.append(Comdty_Array_accuracy[31*i:31*(1+i)])
    qq_test_result = []
    for i in range(len(qq_test_array)):
        qq_test_result.append(PIN.q_q_plot_coeff(qq_test_array[i]))
    return qq_test_result

y = comdty_qq_coeff(SMA)

plt.figure(figsize = (15,10))
plt.scatter(SMA,x, label = "Equity Coeff")
plt.scatter(SMA,y, label = "Comdty Coeff")
plt.plot(np.ones(200)*0.8, color = "red", label = "0.8")
plt.ylabel("Correlation Coefficient", fontsize = 23)
plt.xlabel("SMA", fontsize = 23)
plt.legend(fontsize = 18)
plt.ylim(0.6,1)
plt.show()
